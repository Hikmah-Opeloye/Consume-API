{"version":3,"sources":["component/food.js","App.js","reportWebVitals.js","index.js"],"names":["Fooddata","props","state","error","isLoaded","items","fetch","then","res","json","result","setState","categories","this","message","CardColumns","map","item","Card","bg","text","Img","variant","src","strCategoryThumb","Body","Title","strCategory","Text","strCategoryDescription","Footer","className","idCategory","Component","App","Jumbotron","Container","Row","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA+DeA,E,kDA3Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IANQ,E,gEAUE,IAAD,OAClBC,MAAM,0DACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZP,UAAU,EACVC,MAAOK,EAAOE,gBAMlB,SAACT,GACC,EAAKQ,SAAS,CACZP,UAAU,EACVD,e,+BAMA,IAAD,EAC4BU,KAAKX,MAAhCC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,MACzB,OAAIF,EACK,0CAAaA,EAAMW,WAChBV,EAIR,cAACW,EAAA,EAAD,UACGV,EAAMW,KAAI,SAACC,GAAD,OACT,eAACC,EAAA,EAAD,CAA4BC,GAAG,OAAOC,KAAK,QAA3C,UACE,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAKO,mBAClC,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,UAAaT,EAAKU,cAClB,cAACT,EAAA,EAAKU,KAAN,UAAYX,EAAKY,4BAEnB,cAACX,EAAA,EAAKY,OAAN,UACE,uBAAOC,UAAU,aAAjB,yCAPOd,EAAKe,iBALf,iD,GAtCUC,aCkBRC,MAjBf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,eAACI,EAAA,EAAD,WACE,gDACA,kFAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ,wBAAQN,UAAU,mBCJTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9699e9b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardColumns } from \"react-bootstrap\";\r\n\r\nclass Fooddata extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://www.themealdb.com/api/json/v1/1/categories.php\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.categories,\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <CardColumns>\r\n          {items.map((item) => (\r\n            <Card key={item.idCategory} bg=\"dark\" text=\"white\">\r\n              <Card.Img variant=\"top\" src={item.strCategoryThumb} />\r\n              <Card.Body>\r\n                <Card.Title>{item.strCategory}</Card.Title>\r\n                <Card.Text>{item.strCategoryDescription}</Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n          ))}\r\n        </CardColumns>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Fooddata;\r\n","import \"./App.css\";\nimport { Container, Row, Jumbotron } from \"react-bootstrap\";\nimport Fooddata from \"./component/food\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jumbotron>\n        <h1>Meals.....yum!</h1>\n        <p>This application collects meals from Themealdb</p>\n      </Jumbotron>\n      <Container>\n        <Row>\n          <Fooddata />\n        </Row>\n      </Container>\n      <header className=\"App-header\"></header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}